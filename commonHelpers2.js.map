{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-snackbar.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst submitBtn = document.querySelector('.form');\nsubmitBtn.addEventListener('submit', createPromise);\n\n\nfunction createPromise(event) {\n    event.preventDefault();\n    const delay = this.elements.delay.value; \n\n    const promise = new Promise((resolve, reject) => { \n        const state = document.querySelector('input[name=\"state\"]:checked').value;\n        setTimeout(() => {\n            if (state === 'fulfilled') {\n                resolve(delay);\n            } else {\n                reject(new Error(\n                    iziToast.error({\n                        message: `❌ Rejected promise in ${delay}ms`,\n                    })));\n            }\n        }, delay);\n\n        \n    });\n    promise.then((state) => {\n        iziToast.success({\n        message: `✅ Fulfilled promise in ${state}ms`,\n    });\n\n    })\n        .catch((error) => { console.error(error.message) })\n};\n\n\n\n\n\n\n\n// document.getElementById('myForm').addEventListener('submit', function (event) {\n//     event.preventDefault();\n\n//     const delay = parseInt(document.getElementById('delayInput').value);\n\n//     const promise = new Promise((resolve, reject) => {\n//         const option = document.querySelector('input[name=\"option\"]:checked').value;\n\n//         if (option === 'fulfilled') {\n//             setTimeout(() => resolve(delay), delay);\n//         } else {\n//             reject(new Error(`Promise rejected with a delay of ${delay} milliseconds`));\n//         }\n//     });\n\n//     promise.then(\n//         (result) => {\n//             console.log(`Promise fulfilled with a delay of ${result} milliseconds`);\n//         },\n//         (error) => {\n//             console.error(error.message);\n//         }\n//     );\n// });\n\n\n// const values = document.querySelectorAll('input[name=\"state\"]')\n\n// function onClickSubmitBtn(event) {\n//     event.preventDefault();\n//     const inputValue = this.elements.delay.value   //Значение инпута в мс\n//     // console.log(inputValue);\n\n//     return new Promise((resolve, reject) => {\n        \n//         setTimeout(() => { \n\n//             for (const value of values) {\n                    \n//                 const userCheckRadio = value.value;  // значение радиокнопки\n            \n//                 // console.log(userCheckRadio)\n//                         if (userCheckRadio === \"fulfilled\") {\n//                             iziToast.success({\n                                \n//                                 message: `✅ Fulfilled promise in ${inputValue}ms`,\n//                             });\n\n//                             console.log('ok');\n                            \n//                         } else {\n//                             iziToast.error({\n                                \n//                                 message: `❌ Rejected promise in ${inputValue}ms`,\n//                             }); \n//                             console.log('error');\n                            \n//                      }\n// }                \n\n\n//             // resolve(inputValue)\n//             // reject(inputValue)\n//             // console.log(inputValue); \n \n//         }, inputValue)\n       \n//     });\n    \n// }\n\n\n\n"],"names":["submitBtn","createPromise","event","delay","resolve","reject","state","iziToast","error"],"mappings":"oGAGA,MAAMA,EAAY,SAAS,cAAc,OAAO,EAChDA,EAAU,iBAAiB,SAAUC,CAAa,EAGlD,SAASA,EAAcC,EAAO,CAC1BA,EAAM,eAAc,EACpB,MAAMC,EAAQ,KAAK,SAAS,MAAM,MAElB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC7C,MAAMC,EAAQ,SAAS,cAAc,6BAA6B,EAAE,MACpE,WAAW,IAAM,CACTA,IAAU,YACVF,EAAQD,CAAK,EAEbE,EAAO,IAAI,MACPE,EAAS,MAAM,CACX,QAAS,yBAAyBJ,KACrC,CAAA,CAAC,CAAC,CAEd,EAAEA,CAAK,CAGhB,CAAK,EACO,KAAMG,GAAU,CACpBC,EAAS,QAAQ,CACjB,QAAS,0BAA0BD,KAC3C,CAAK,CAEL,CAAK,EACI,MAAOE,GAAU,CAAE,QAAQ,MAAMA,EAAM,OAAO,EAAG,CAC1D"}